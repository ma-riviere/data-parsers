package com.parser.common.aion.enums;

import com.google.common.base.Strings;

/**
 * @author Viria
 */
public enum ModifiersEnum {

	NONE,
	MAXHP("MAXHP"),
	MAXMP("MAXMP"),
	BLOCK("BLOCK"),
	EVASION("DODGE"),
	CONCENTRATION("CONCENTRATION"),
	PARRY("PARRY"),
	SPEED("SPEED"),
	ATTACK_SPEED("ATTACKDELAY"),
	PHYSICAL_ATTACK("PHYATTACK"),
	PHYSICAL_ACCURACY("HITACCURACY"),
	PHYSICAL_CRITICAL("CRITICAL"),
	PHYSICAL_DEFENSE("PHYSICALDEFEND"),
	MAGICAL_ATTACK("MAGICALATTACK"),
	MAGICAL_ACCURACY("MAGICALHITACCURACY"),
	MAGICAL_CRITICAL("MAGICALCRITICAL"),
	// MAGICAL_RESIST("MAGICALRESIST"), Handled by the accessors
	MAGICAL_RESIST("MAGICAL_RESIST"),
	EARTH_RESISTANCE("ELEMENTALDEFENDEARTH"),
	FIRE_RESISTANCE("ELEMENTALDEFENDFIRE"),
	WIND_RESISTANCE("ELEMENTALDEFENDAIR"),
	WATER_RESISTANCE("ELEMENTALDEFENDWATER"),
	BOOST_MAGICAL_SKILL("MAGICALSKILLBOOST"),
	BOOST_CASTING_TIME("BOOSTCASTINGTIME"),
	BOOST_HATE("BOOSTHATE"),
	FLY_TIME("MAXFP"),
	FLY_SPEED("FLYSPEED"),
	PVP_ATTACK_RATIO("PVPATTACKRATIO"),
	PVP_ATTACK_RATIO_PHYSICAL("PVPATTACKRATIO_PHYSICAL"),
	PVP_ATTACK_RATIO_MAGICAL("PVPATTACKRATIO_MAGICAL"),
	PVP_DEFEND_RATIO("PVPDEFENDRATIO"),
	PVP_DEFEND_RATIO_PHYSICAL("PVPDEFENDRATIO_PHYSICAL"),
	PVP_DEFEND_RATIO_MAGICAL("PVPDEFENDRATIO_MAGICAL"),
	BLEED_RESISTANCE("ARBLEED"),
	BLIND_RESISTANCE("ARBLIND"),
	CHARM_RESISTANCE("ARCHARM"),
	CONFUSE_RESISTANCE("ARCONFUSE"),
	CURSE_RESISTANCE("ARCURSE"),
	// DEFORM_RESISTANCE(""),
	DISEASE_RESISTANCE("ARDISEASE"),
	FEAR_RESISTANCE("ARFEAR"),
	OPENAREIAL_RESISTANCE("AROPENAREIAL"),
	PARALYZE_RESISTANCE("ARPARALYZE"),
	PERIFICATION_RESISTANCE("ARPERIFICATION"),
	POISON_RESISTANCE("ARPOISON"),
	ROOT_RESISTANCE("ARROOT"),
	SILENCE_RESISTANCE("ARSILENCE"),
	SLEEP_RESISTANCE("ARSLEEP"),
	SLOW_RESISTANCE("ARSLOW"),
	SNARE_RESISTANCE("ARSNARE"),
	SPIN_RESISTANCE("ARSPIN"),
	STAGGER_RESISTANCE("ARSTAGGER"),
	STUMBLE_RESISTANCE("ARSTUMBLE"),
	STUN_RESISTANCE("ARSTUN"),
	SILENCE_RESISTANCE_PENETRATION("SILENCE_ARP"),
	PARALYZE_RESISTANCE_PENETRATION("PARALYZE_ARP"),
	STAGGER_RESISTANCE_PENETRATION("STAGGER_ARP"),
	STUMBLE_RESISTANCE_PENETRATION("STUMBLE_ARP"),
	STUN_RESISTANCE_PENETRATION("STUN_ARP"),
	HEAL_BOOST("HEALSKILLBOOST"),
	MAGICAL_CRITICAL_RESIST("MAGICALCRITICALREDUCERATE"),
	MAGICAL_CRITICAL_DAMAGE_REDUCE("MAGICALCRITICALDAMAGEREDUCE"),
	PHYSICAL_CRITICAL_RESIST("PHYSICALCRITICALREDUCERATE"),
	PHYSICAL_CRITICAL_DAMAGE_REDUCE("PHYSICALCRITICALDAMAGEREDUCE"),
	MAGICAL_DEFEND("MAGICALDEFEND"),
	MAGIC_SKILL_BOOST_RESIST("MAGICALSKILLBOOSTRESIST"),
	POISON_RESISTANCE_PENETRATION("POISON_ARP"),
	BLEED_RESISTANCE_PENETRATION("BLEED_ARP"),
	SLEEP_RESISTANCE_PENETRATION("SLEEP_ARP"),
	ROOT_RESISTANCE_PENETRATION("ROOT_ARP"),
	BLIND_RESISTANCE_PENETRATION("BLIND_ARP"),
	CHARM_RESISTANCE_PENETRATION("CHARM_ARP"),
	DISEASE_RESISTANCE_PENETRATION("DISEASE_ARP"),
	FEAR_RESISTANCE_PENETRATION("FEAR_ARP"),
	SPIN_RESISTANCE_PENETRATION("SPIN_ARP"),
	CURSE_RESISTANCE_PENETRATION("CURSE_ARP"),
	CONFUSE_RESISTANCE_PENETRATION("CONFUSE_ARP"),
	PERIFICATION_RESISTANCE_PENETRATION("PERIFICATION_ARP"),
	OPENAREIAL_RESISTANCE_PENETRATION("OPENAREIAL_ARP"),
	SNARE_RESISTANCE_PENETRATION("SNARE_ARP"),
	SLOW_RESISTANCE_PENETRATION("SLOW_ARP");

	private String clientString;
	
	private ModifiersEnum(String clientString) {
		this.clientString = clientString;
	}
	
	private ModifiersEnum() {
		this(null);
	}
	
	public String getClientString() {return clientString;}
	
	public static ModifiersEnum fromClient(String string) {
		
		// Special corrections (Thanks NC ...)
		if (string.equalsIgnoreCase("MAGICALRESIST")) {string = "MAGICAL_RESIST";}
		
		for (ModifiersEnum v : values()) {
			if (v.getClientString() != null) {
				if (v.getClientString().equalsIgnoreCase(string))
					return v;
			} else {
				if (fromValue(string) != null)
					return fromValue(string);
			}
		}
		System.out.println("[MODIFIERS] No Modifiers matching :" + string);
		return ModifiersEnum.NONE;
	}
	
	public static ModifiersEnum fromValue(String name) {
		for (ModifiersEnum v : values()) {
			if (v.toString().equalsIgnoreCase(name))
				return v;
		}
		return null;
	}
}
