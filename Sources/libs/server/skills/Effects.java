//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-833 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.03.23 at 01:29:26 PM CET 
//


package com.parser.output.aion.skills;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for Effects complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Effects">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence maxOccurs="unbounded" minOccurs="0">
 *         &lt;element name="root" type="{}RootEffect" minOccurs="0"/>
 *         &lt;element name="stun" type="{}StunEffect" minOccurs="0"/>
 *         &lt;element name="sleep" type="{}SleepEffect" minOccurs="0"/>
 *         &lt;element name="snare" type="{}SnareEffect" minOccurs="0"/>
 *         &lt;element name="slow" type="{}SlowEffect" minOccurs="0"/>
 *         &lt;element name="poison" type="{}PoisonEffect" minOccurs="0"/>
 *         &lt;element name="bleed" type="{}BleedEffect" minOccurs="0"/>
 *         &lt;element name="stumble" type="{}StumbleEffect" minOccurs="0"/>
 *         &lt;element name="spin" type="{}SpinEffect" minOccurs="0"/>
 *         &lt;element name="stagger" type="{}StaggerEffect" minOccurs="0"/>
 *         &lt;element name="openaerial" type="{}OpenAerialEffect" minOccurs="0"/>
 *         &lt;element name="closeaerial" type="{}CloseAerialEffect" minOccurs="0"/>
 *         &lt;element name="bind" type="{}BindEffect" minOccurs="0"/>
 *         &lt;element name="shield" type="{}ShieldEffect" minOccurs="0"/>
 *         &lt;element name="dispel" type="{}DispelEffect" minOccurs="0"/>
 *         &lt;element name="statup" type="{}StatupEffect" minOccurs="0"/>
 *         &lt;element name="statboost" type="{}StatboostEffect" minOccurs="0"/>
 *         &lt;element name="weaponstatboost" type="{}WeaponStatboostEffect" minOccurs="0"/>
 *         &lt;element name="wpnmastery" type="{}WeaponMasteryEffect" minOccurs="0"/>
 *         &lt;element name="statdown" type="{}StatdownEffect" minOccurs="0"/>
 *         &lt;element name="spellatk" type="{}SpellAttackEffect" minOccurs="0"/>
 *         &lt;element name="deform" type="{}DeformEffect" minOccurs="0"/>
 *         &lt;element name="shapechange" type="{}ShapeChangeEffect" minOccurs="0"/>
 *         &lt;element name="polymorph" type="{}PolymorphEffect" minOccurs="0"/>
 *         &lt;element name="hide" type="{}HideEffect" minOccurs="0"/>
 *         &lt;element name="search" type="{}SearchEffect" minOccurs="0"/>
 *         &lt;element name="healinstant" type="{}HealInstantEffect" minOccurs="0"/>
 *         &lt;element name="mphealinstant" type="{}MPHealInstantEffect" minOccurs="0"/>
 *         &lt;element name="dphealinstant" type="{}DPHealInstantEffect" minOccurs="0"/>
 *         &lt;element name="fphealinstant" type="{}FPHealInstantEffect" minOccurs="0"/>
 *         &lt;element name="skillatk" type="{}SkillAttackInstantEffect" minOccurs="0"/>
 *         &lt;element name="spellatkinstant" type="{}SpellAttackInstantEffect" minOccurs="0"/>
 *         &lt;element name="dash" type="{}DashEffect" minOccurs="0"/>
 *         &lt;element name="backdash" type="{}BackDashEffect" minOccurs="0"/>
 *         &lt;element name="delaydamage" type="{}DelayedSpellAttackInstantEffect" minOccurs="0"/>
 *         &lt;element name="return" type="{}ReturnEffect" minOccurs="0"/>
 *         &lt;element name="prochealinstant" type="{}ProcHealInstantEffect" minOccurs="0"/>
 *         &lt;element name="procmphealinstant" type="{}ProcMPHealInstantEffect" minOccurs="0"/>
 *         &lt;element name="procdphealinstant" type="{}ProcDPHealInstantEffect" minOccurs="0"/>
 *         &lt;element name="procfphealinstant" type="{}ProcFPHealInstantEffect" minOccurs="0"/>
 *         &lt;element name="carvesignet" type="{}CarveSignetEffect" minOccurs="0"/>
 *         &lt;element name="signet" type="{}SignetEffect" minOccurs="0"/>
 *         &lt;element name="signetburst" type="{}SignetBurstEffect" minOccurs="0"/>
 *         &lt;element name="silence" type="{}SilenceEffect" minOccurs="0"/>
 *         &lt;element name="curse" type="{}CurseEffect" minOccurs="0"/>
 *         &lt;element name="blind" type="{}BlindEffect" minOccurs="0"/>
 *         &lt;element name="disease" type="{}DiseaseEffect" minOccurs="0"/>
 *         &lt;element name="boosthate" type="{}BoostHateEffect" minOccurs="0"/>
 *         &lt;element name="hostileup" type="{}HostileUpEffect" minOccurs="0"/>
 *         &lt;element name="paralyze" type="{}ParalyzeEffect" minOccurs="0"/>
 *         &lt;element name="confuse" type="{}ConfuseEffect" minOccurs="0"/>
 *         &lt;element name="alwaysresist" type="{}AlwaysResistEffect" minOccurs="0"/>
 *         &lt;element name="alwaysblock" type="{}AlwaysBlockEffect" minOccurs="0"/>
 *         &lt;element name="alwaysparry" type="{}AlwaysParryEffect" minOccurs="0"/>
 *         &lt;element name="alwaysdodge" type="{}AlwaysDodgeEffect" minOccurs="0"/>
 *         &lt;element name="dispeldebuffphysical" type="{}DispelDebuffPhysicalEffect" minOccurs="0"/>
 *         &lt;element name="dispeldebuff" type="{}DispelDebuffEffect" minOccurs="0"/>
 *         &lt;element name="switchhpmp" type="{}SwitchHpMpEffect" minOccurs="0"/>
 *         &lt;element name="aura" type="{}AuraEffect" minOccurs="0"/>
 *         &lt;element name="summon" type="{}SummonEffect" minOccurs="0"/>
 *         &lt;element name="fear" type="{}FearEffect" minOccurs="0"/>
 *         &lt;element name="resurrect" type="{}ResurrectEffect" minOccurs="0"/>
 *         &lt;element name="dispeldebuffmental" type="{}DispelDebuffMentalEffect" minOccurs="0"/>
 *         &lt;element name="reflector" type="{}ReflectorEffect" minOccurs="0"/>
 *         &lt;element name="returnpoint" type="{}ReturnPointEffect" minOccurs="0"/>
 *         &lt;element name="provoker" type="{}ProvokerEffect" minOccurs="0"/>
 *         &lt;element name="spellatkdraininstant" type="{}SpellAtkDrainInstantEffect" minOccurs="0"/>
 *         &lt;element name="onetimeboostskillattack" type="{}OneTimeBoostSkillAttackEffect" minOccurs="0"/>
 *         &lt;element name="onetimeboostskillcritical" type="{}OneTimeBoostSkillCriticalEffect" minOccurs="0"/>
 *         &lt;element name="armormastery" type="{}ArmorMasteryEffect" minOccurs="0"/>
 *         &lt;element name="weaponstatup" type="{}WeaponStatupEffect" minOccurs="0"/>
 *         &lt;element name="boostskillcastingtime" type="{}BoostSkillCastingTimeEffect" minOccurs="0"/>
 *         &lt;element name="summontrap" type="{}SummonTrapEffect" minOccurs="0"/>
 *         &lt;element name="summongroupgate" type="{}SummonGroupGateEffect" minOccurs="0"/>
 *         &lt;element name="summonservant" type="{}SummonServantEffect" minOccurs="0"/>
 *         &lt;element name="skillatkdraininstant" type="{}SkillAtkDrainInstantEffect" minOccurs="0"/>
 *         &lt;element name="petorderuseultraskill" type="{}PetOrderUseUltraSkillEffect" minOccurs="0"/>
 *         &lt;element name="boostheal" type="{}BoostHealEffect" minOccurs="0"/>
 *         &lt;element name="dispelbuff" type="{}DispelBuffEffect" minOccurs="0"/>
 *         &lt;element name="procatk_instant" type="{}ProcAtkInstantEffect" minOccurs="0"/>
 *         &lt;element name="skilllauncher" type="{}SkillLauncherEffect" minOccurs="0"/>
 *         &lt;element name="pulled" type="{}PulledEffect" minOccurs="0"/>
 *         &lt;element name="movebehind" type="{}MoveBehindEffect" minOccurs="0"/>
 *         &lt;element name="rebirth" type="{}RebirthEffect" minOccurs="0"/>
 *         &lt;element name="boostskillcost" type="{}BoostSkillCostEffect" minOccurs="0"/>
 *         &lt;element name="protect" type="{}ProtectEffect" minOccurs="0"/>
 *         &lt;element name="resurrectbase" type="{}ResurrectBaseEffect" minOccurs="0"/>
 *         &lt;element name="magiccounteratk" type="{}MagicCounterAtkEffect" minOccurs="0"/>
 *         &lt;element name="recallinstant" type="{}RecallInstantEffect" minOccurs="0"/>
 *         &lt;element name="randommoveloc" type="{}RandomMoveLocEffect" minOccurs="0"/>
 *         &lt;element name="summonhoming" type="{}SummonHomingEffect" minOccurs="0"/>
 *         &lt;element name="dispelbuffcounteratk" type="{}DispelBuffCounterAtkEffect" minOccurs="0"/>
 *         &lt;element name="xpboost" type="{}XPBoostEffect" minOccurs="0"/>
 *         &lt;element name="fpatkinstant" type="{}FpAttackInstantEffect" minOccurs="0"/>
 *         &lt;element name="fpatk" type="{}FpAttackEffect" minOccurs="0"/>
 *         &lt;element name="onetimeboostheal" type="{}OneTimeBoostHealEffect" minOccurs="0"/>
 *         &lt;element name="deboostheal" type="{}DeboostHealEffect" minOccurs="0"/>
 *         &lt;element name="summonskillarea" type="{}SummonSkillAreaEffect" minOccurs="0"/>
 *         &lt;element name="resurrectpos" type="{}ResurrectPositionalEffect" minOccurs="0"/>
 *         &lt;element name="nofly" type="{}NoFlyEffect" minOccurs="0"/>
 *         &lt;element name="nofpconsum" type="{}NoFPConsumEffect" minOccurs="0"/>
 *         &lt;element name="healcastoronatk" type="{}HealCastorOnAttackedEffect" minOccurs="0"/>
 *         &lt;element name="wpndual" type="{}WeaponDualEffect" minOccurs="0"/>
 *         &lt;element name="invulnerablewing" type="{}InvulnerableWingEffect" minOccurs="0"/>
 *         &lt;element name="shieldmastery" type="{}ShieldMasteryEffect" minOccurs="0"/>
 *         &lt;element name="simpleroot" type="{}SimpleRootEffect" minOccurs="0"/>
 *         &lt;element name="dptransfer" type="{}DPTransferEffect" minOccurs="0"/>
 *         &lt;element name="mpattack" type="{}MpAttackEffect" minOccurs="0"/>
 *         &lt;element name="boostdroprate" type="{}BoostDropRateEffect" minOccurs="0"/>
 *         &lt;element name="spellatkdrain" type="{}SpellAtkDrainEffect" minOccurs="0"/>
 *         &lt;element name="extendedaurarange" type="{}ExtendAuraRangeEffect" minOccurs="0"/>
 *         &lt;element name="changehateonattacked" type="{}ChangeHateOnAttackedEffect" minOccurs="0"/>
 *         &lt;element name="healcastorontargetdead" type="{}HealCastorOnTargetDeadEffect" minOccurs="0"/>
 *         &lt;element name="noreducespellatk" type="{}NoReduceSpellATKInstantEffect" minOccurs="0"/>
 *         &lt;element name="mpattackinstant" type="{}MpAttackInstantEffect" minOccurs="0"/>
 *         &lt;element name="condskilllauncher" type="{}CondSkillLauncherEffect" minOccurs="0"/>
 *         &lt;element name="fall" type="{}FallEffect" minOccurs="0"/>
 *         &lt;element name="evade" type="{}EvadeEffect" minOccurs="0"/>
 *         &lt;element name="buffbind" type="{}BuffBindEffect" minOccurs="0"/>
 *         &lt;element name="buffsilence" type="{}BuffSilenceEffect" minOccurs="0"/>
 *         &lt;element name="buffsleep" type="{}BuffSleepEffect" minOccurs="0"/>
 *         &lt;element name="buffstun" type="{}BuffStunEffect" minOccurs="0"/>
 *         &lt;element name="heal" type="{}HealEffect" minOccurs="0"/>
 *         &lt;element name="mpheal" type="{}MPHealEffect" minOccurs="0"/>
 *         &lt;element name="fpheal" type="{}FPHealEffect" minOccurs="0"/>
 *         &lt;element name="dpheal" type="{}DPHealEffect" minOccurs="0"/>
 *         &lt;element name="summontotem" type="{}SummonTotemEffect" minOccurs="0"/>
 *         &lt;element name="boostspellattack" type="{}BoostSpellAttackEffect" minOccurs="0"/>
 *         &lt;element name="switchhostile" type="{}SwitchHostileEffect" minOccurs="0"/>
 *         &lt;element name="noresurrectpenalty" type="{}NoResurrectPenaltyEffect" minOccurs="0"/>
 *         &lt;element name="hipass" type="{}HiPassEffect" minOccurs="0"/>
 *         &lt;element name="nodeathpenalty" type="{}NoDeathPenaltyEffect" minOccurs="0"/>
 *         &lt;element name="caseheal" type="{}CaseHealEffect" minOccurs="0"/>
 *         &lt;element name="procvphealinstant" type="{}ProcVPHealInstantEffect" minOccurs="0"/>
 *         &lt;element name="summonhousegate" type="{}SummonHouseGateEffect" minOccurs="0"/>
 *         &lt;element name="summonbindinggroupgate" type="{}SummonBindingGroupGateEffect" minOccurs="0"/>
 *         &lt;element name="convertheal" type="{}ConvertHealEffect" minOccurs="0"/>
 *         &lt;element name="sanctuary" type="{}SanctuaryEffect" minOccurs="0"/>
 *         &lt;element name="subtypeextendduration" type="{}SubTypeExtendDurationEffect" minOccurs="0"/>
 *         &lt;element name="subtypeboostresist" type="{}SubTypeBoostResistEffect" minOccurs="0"/>
 *         &lt;element name="dispelnpcbuff" type="{}DispelNpcBuffEffect" minOccurs="0"/>
 *         &lt;element name="dispelnpcdebuff" type="{}DispelNpcDebuffEffect" minOccurs="0"/>
 *         &lt;element name="deathblow" type="{}DeathBlowEffect" minOccurs="0"/>
 *         &lt;element name="delayedskill" type="{}DelayedSkillEffect" minOccurs="0"/>
 *         &lt;element name="delayedfpatk_instant" type="{}DelayedFpAtkInstantEffect" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Effects", propOrder = {
    "rootAndStunAndSleep"
})
public class Effects {

    @XmlElements({
        @XmlElement(name = "condskilllauncher", type = CondSkillLauncherEffect.class),
        @XmlElement(name = "openaerial", type = OpenAerialEffect.class),
        @XmlElement(name = "boostdroprate", type = BoostDropRateEffect.class),
        @XmlElement(name = "nofpconsum", type = NoFPConsumEffect.class),
        @XmlElement(name = "dptransfer", type = DPTransferEffect.class),
        @XmlElement(name = "prochealinstant", type = ProcHealInstantEffect.class),
        @XmlElement(name = "search", type = SearchEffect.class),
        @XmlElement(name = "spellatkinstant", type = SpellAttackInstantEffect.class),
        @XmlElement(name = "stumble", type = StumbleEffect.class),
        @XmlElement(name = "summonhousegate", type = SummonHouseGateEffect.class),
        @XmlElement(name = "mpheal", type = MPHealEffect.class),
        @XmlElement(name = "boosthate", type = BoostHateEffect.class),
        @XmlElement(name = "pulled", type = PulledEffect.class),
        @XmlElement(name = "onetimeboostskillcritical", type = OneTimeBoostSkillCriticalEffect.class),
        @XmlElement(name = "boostskillcost", type = BoostSkillCostEffect.class),
        @XmlElement(name = "summonskillarea", type = SummonSkillAreaEffect.class),
        @XmlElement(name = "reflector", type = ReflectorEffect.class),
        @XmlElement(name = "boostskillcastingtime", type = BoostSkillCastingTimeEffect.class),
        @XmlElement(name = "rebirth", type = RebirthEffect.class),
        @XmlElement(name = "statup", type = StatupEffect.class),
        @XmlElement(name = "procfphealinstant", type = ProcFPHealInstantEffect.class),
        @XmlElement(name = "healcastorontargetdead", type = HealCastorOnTargetDeadEffect.class),
        @XmlElement(name = "disease", type = DiseaseEffect.class),
        @XmlElement(name = "mphealinstant", type = MPHealInstantEffect.class),
        @XmlElement(name = "backdash", type = BackDashEffect.class),
        @XmlElement(name = "shapechange", type = ShapeChangeEffect.class),
        @XmlElement(name = "boostspellattack", type = BoostSpellAttackEffect.class),
        @XmlElement(name = "summonbindinggroupgate", type = SummonBindingGroupGateEffect.class),
        @XmlElement(name = "delaydamage", type = DelayedSpellAttackInstantEffect.class),
        @XmlElement(name = "deathblow", type = DeathBlowEffect.class),
        @XmlElement(name = "sanctuary", type = SanctuaryEffect.class),
        @XmlElement(name = "procmphealinstant", type = ProcMPHealInstantEffect.class),
        @XmlElement(name = "returnpoint", type = ReturnPointEffect.class),
        @XmlElement(name = "provoker", type = ProvokerEffect.class),
        @XmlElement(name = "dispelbuff", type = DispelBuffEffect.class),
        @XmlElement(name = "healinstant", type = HealInstantEffect.class),
        @XmlElement(name = "blind", type = BlindEffect.class),
        @XmlElement(name = "randommoveloc", type = RandomMoveLocEffect.class),
        @XmlElement(name = "spin", type = SpinEffect.class),
        @XmlElement(name = "buffsleep", type = BuffSleepEffect.class),
        @XmlElement(name = "return", type = ReturnEffect.class),
        @XmlElement(name = "buffsilence", type = BuffSilenceEffect.class),
        @XmlElement(name = "noreducespellatk", type = NoReduceSpellATKInstantEffect.class),
        @XmlElement(name = "buffstun", type = BuffStunEffect.class),
        @XmlElement(name = "procdphealinstant", type = ProcDPHealInstantEffect.class),
        @XmlElement(name = "carvesignet", type = CarveSignetEffect.class),
        @XmlElement(name = "spellatk", type = SpellAttackEffect.class),
        @XmlElement(name = "skilllauncher", type = SkillLauncherEffect.class),
        @XmlElement(name = "magiccounteratk", type = MagicCounterAtkEffect.class),
        @XmlElement(name = "healcastoronatk", type = HealCastorOnAttackedEffect.class),
        @XmlElement(name = "stun", type = StunEffect.class),
        @XmlElement(name = "delayedskill", type = DelayedSkillEffect.class),
        @XmlElement(name = "deform", type = DeformEffect.class),
        @XmlElement(name = "alwaysblock", type = AlwaysBlockEffect.class),
        @XmlElement(name = "procatk_instant", type = ProcAtkInstantEffect.class),
        @XmlElement(name = "hostileup", type = HostileUpEffect.class),
        @XmlElement(name = "statboost", type = StatboostEffect.class),
        @XmlElement(name = "buffbind", type = BuffBindEffect.class),
        @XmlElement(name = "confuse", type = ConfuseEffect.class),
        @XmlElement(name = "dispelbuffcounteratk", type = DispelBuffCounterAtkEffect.class),
        @XmlElement(name = "shield", type = ShieldEffect.class),
        @XmlElement(name = "heal", type = HealEffect.class),
        @XmlElement(name = "mpattack", type = MpAttackEffect.class),
        @XmlElement(name = "poison", type = PoisonEffect.class),
        @XmlElement(name = "summonhoming", type = SummonHomingEffect.class),
        @XmlElement(name = "dispelnpcbuff", type = DispelNpcBuffEffect.class),
        @XmlElement(name = "stagger", type = StaggerEffect.class),
        @XmlElement(name = "subtypeboostresist", type = SubTypeBoostResistEffect.class),
        @XmlElement(name = "sleep", type = SleepEffect.class),
        @XmlElement(name = "hide", type = HideEffect.class),
        @XmlElement(name = "convertheal", type = ConvertHealEffect.class),
        @XmlElement(name = "movebehind", type = MoveBehindEffect.class),
        @XmlElement(name = "onetimeboostskillattack", type = OneTimeBoostSkillAttackEffect.class),
        @XmlElement(name = "weaponstatup", type = WeaponStatupEffect.class),
        @XmlElement(name = "dphealinstant", type = DPHealInstantEffect.class),
        @XmlElement(name = "resurrectpos", type = ResurrectPositionalEffect.class),
        @XmlElement(name = "alwaysresist", type = AlwaysResistEffect.class),
        @XmlElement(name = "evade", type = EvadeEffect.class),
        @XmlElement(name = "fall", type = FallEffect.class),
        @XmlElement(name = "subtypeextendduration", type = SubTypeExtendDurationEffect.class),
        @XmlElement(name = "snare", type = SnareEffect.class),
        @XmlElement(name = "summon", type = SummonEffect.class),
        @XmlElement(name = "procvphealinstant", type = ProcVPHealInstantEffect.class),
        @XmlElement(name = "bind", type = BindEffect.class),
        @XmlElement(name = "skillatkdraininstant", type = SkillAtkDrainInstantEffect.class),
        @XmlElement(name = "wpnmastery", type = WeaponMasteryEffect.class),
        @XmlElement(name = "resurrect", type = ResurrectEffect.class),
        @XmlElement(name = "switchhostile", type = SwitchHostileEffect.class),
        @XmlElement(name = "dispeldebuffphysical", type = DispelDebuffPhysicalEffect.class),
        @XmlElement(name = "resurrectbase", type = ResurrectBaseEffect.class),
        @XmlElement(name = "dash", type = DashEffect.class),
        @XmlElement(name = "signet", type = SignetEffect.class),
        @XmlElement(name = "alwaysdodge", type = AlwaysDodgeEffect.class),
        @XmlElement(name = "summongroupgate", type = SummonGroupGateEffect.class),
        @XmlElement(name = "caseheal", type = CaseHealEffect.class),
        @XmlElement(name = "deboostheal", type = DeboostHealEffect.class),
        @XmlElement(name = "dispelnpcdebuff", type = DispelNpcDebuffEffect.class),
        @XmlElement(name = "simpleroot", type = SimpleRootEffect.class),
        @XmlElement(name = "wpndual", type = WeaponDualEffect.class),
        @XmlElement(name = "spellatkdrain", type = SpellAtkDrainEffect.class),
        @XmlElement(name = "skillatk", type = SkillAttackInstantEffect.class),
        @XmlElement(name = "invulnerablewing", type = InvulnerableWingEffect.class),
        @XmlElement(name = "fpatkinstant", type = FpAttackInstantEffect.class),
        @XmlElement(name = "statdown", type = StatdownEffect.class),
        @XmlElement(name = "alwaysparry", type = AlwaysParryEffect.class),
        @XmlElement(name = "armormastery", type = ArmorMasteryEffect.class),
        @XmlElement(name = "fpheal", type = FPHealEffect.class),
        @XmlElement(name = "noresurrectpenalty", type = NoResurrectPenaltyEffect.class),
        @XmlElement(name = "dpheal", type = DPHealEffect.class),
        @XmlElement(name = "signetburst", type = SignetBurstEffect.class),
        @XmlElement(name = "dispel", type = DispelEffect.class),
        @XmlElement(name = "dispeldebuff", type = DispelDebuffEffect.class),
        @XmlElement(name = "protect", type = ProtectEffect.class),
        @XmlElement(name = "slow", type = SlowEffect.class),
        @XmlElement(name = "boostheal", type = BoostHealEffect.class),
        @XmlElement(name = "weaponstatboost", type = WeaponStatboostEffect.class),
        @XmlElement(name = "changehateonattacked", type = ChangeHateOnAttackedEffect.class),
        @XmlElement(name = "extendedaurarange", type = ExtendAuraRangeEffect.class),
        @XmlElement(name = "closeaerial", type = CloseAerialEffect.class),
        @XmlElement(name = "dispeldebuffmental", type = DispelDebuffMentalEffect.class),
        @XmlElement(name = "root", type = RootEffect.class),
        @XmlElement(name = "paralyze", type = ParalyzeEffect.class),
        @XmlElement(name = "fphealinstant", type = FPHealInstantEffect.class),
        @XmlElement(name = "switchhpmp", type = SwitchHpMpEffect.class),
        @XmlElement(name = "spellatkdraininstant", type = SpellAtkDrainInstantEffect.class),
        @XmlElement(name = "xpboost", type = XPBoostEffect.class),
        @XmlElement(name = "polymorph", type = PolymorphEffect.class),
        @XmlElement(name = "delayedfpatk_instant", type = DelayedFpAtkInstantEffect.class),
        @XmlElement(name = "bleed", type = BleedEffect.class),
        @XmlElement(name = "onetimeboostheal", type = OneTimeBoostHealEffect.class),
        @XmlElement(name = "mpattackinstant", type = MpAttackInstantEffect.class),
        @XmlElement(name = "petorderuseultraskill", type = PetOrderUseUltraSkillEffect.class),
        @XmlElement(name = "hipass", type = HiPassEffect.class),
        @XmlElement(name = "silence", type = SilenceEffect.class),
        @XmlElement(name = "aura", type = AuraEffect.class),
        @XmlElement(name = "recallinstant", type = RecallInstantEffect.class),
        @XmlElement(name = "nofly", type = NoFlyEffect.class),
        @XmlElement(name = "summontotem", type = SummonTotemEffect.class),
        @XmlElement(name = "summontrap", type = SummonTrapEffect.class),
        @XmlElement(name = "shieldmastery", type = ShieldMasteryEffect.class),
        @XmlElement(name = "summonservant", type = SummonServantEffect.class),
        @XmlElement(name = "fpatk", type = FpAttackEffect.class),
        @XmlElement(name = "fear", type = FearEffect.class),
        @XmlElement(name = "nodeathpenalty", type = NoDeathPenaltyEffect.class),
        @XmlElement(name = "curse", type = CurseEffect.class)
    })
    protected List<Effect> rootAndStunAndSleep;

    /**
     * Gets the value of the rootAndStunAndSleep property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the rootAndStunAndSleep property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRootAndStunAndSleep().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CondSkillLauncherEffect }
     * {@link OpenAerialEffect }
     * {@link BoostDropRateEffect }
     * {@link NoFPConsumEffect }
     * {@link DPTransferEffect }
     * {@link ProcHealInstantEffect }
     * {@link SearchEffect }
     * {@link SpellAttackInstantEffect }
     * {@link StumbleEffect }
     * {@link SummonHouseGateEffect }
     * {@link MPHealEffect }
     * {@link BoostHateEffect }
     * {@link PulledEffect }
     * {@link OneTimeBoostSkillCriticalEffect }
     * {@link BoostSkillCostEffect }
     * {@link SummonSkillAreaEffect }
     * {@link ReflectorEffect }
     * {@link BoostSkillCastingTimeEffect }
     * {@link RebirthEffect }
     * {@link StatupEffect }
     * {@link ProcFPHealInstantEffect }
     * {@link HealCastorOnTargetDeadEffect }
     * {@link DiseaseEffect }
     * {@link MPHealInstantEffect }
     * {@link BackDashEffect }
     * {@link ShapeChangeEffect }
     * {@link BoostSpellAttackEffect }
     * {@link SummonBindingGroupGateEffect }
     * {@link DelayedSpellAttackInstantEffect }
     * {@link DeathBlowEffect }
     * {@link SanctuaryEffect }
     * {@link ProcMPHealInstantEffect }
     * {@link ReturnPointEffect }
     * {@link ProvokerEffect }
     * {@link DispelBuffEffect }
     * {@link HealInstantEffect }
     * {@link BlindEffect }
     * {@link RandomMoveLocEffect }
     * {@link SpinEffect }
     * {@link BuffSleepEffect }
     * {@link ReturnEffect }
     * {@link BuffSilenceEffect }
     * {@link NoReduceSpellATKInstantEffect }
     * {@link BuffStunEffect }
     * {@link ProcDPHealInstantEffect }
     * {@link CarveSignetEffect }
     * {@link SpellAttackEffect }
     * {@link SkillLauncherEffect }
     * {@link MagicCounterAtkEffect }
     * {@link HealCastorOnAttackedEffect }
     * {@link StunEffect }
     * {@link DelayedSkillEffect }
     * {@link DeformEffect }
     * {@link AlwaysBlockEffect }
     * {@link ProcAtkInstantEffect }
     * {@link HostileUpEffect }
     * {@link StatboostEffect }
     * {@link BuffBindEffect }
     * {@link ConfuseEffect }
     * {@link DispelBuffCounterAtkEffect }
     * {@link ShieldEffect }
     * {@link HealEffect }
     * {@link MpAttackEffect }
     * {@link PoisonEffect }
     * {@link SummonHomingEffect }
     * {@link DispelNpcBuffEffect }
     * {@link StaggerEffect }
     * {@link SubTypeBoostResistEffect }
     * {@link SleepEffect }
     * {@link HideEffect }
     * {@link ConvertHealEffect }
     * {@link MoveBehindEffect }
     * {@link OneTimeBoostSkillAttackEffect }
     * {@link WeaponStatupEffect }
     * {@link DPHealInstantEffect }
     * {@link ResurrectPositionalEffect }
     * {@link AlwaysResistEffect }
     * {@link EvadeEffect }
     * {@link FallEffect }
     * {@link SubTypeExtendDurationEffect }
     * {@link SnareEffect }
     * {@link SummonEffect }
     * {@link ProcVPHealInstantEffect }
     * {@link BindEffect }
     * {@link SkillAtkDrainInstantEffect }
     * {@link WeaponMasteryEffect }
     * {@link ResurrectEffect }
     * {@link SwitchHostileEffect }
     * {@link DispelDebuffPhysicalEffect }
     * {@link ResurrectBaseEffect }
     * {@link DashEffect }
     * {@link SignetEffect }
     * {@link AlwaysDodgeEffect }
     * {@link SummonGroupGateEffect }
     * {@link CaseHealEffect }
     * {@link DeboostHealEffect }
     * {@link DispelNpcDebuffEffect }
     * {@link SimpleRootEffect }
     * {@link WeaponDualEffect }
     * {@link SpellAtkDrainEffect }
     * {@link SkillAttackInstantEffect }
     * {@link InvulnerableWingEffect }
     * {@link FpAttackInstantEffect }
     * {@link StatdownEffect }
     * {@link AlwaysParryEffect }
     * {@link ArmorMasteryEffect }
     * {@link FPHealEffect }
     * {@link NoResurrectPenaltyEffect }
     * {@link DPHealEffect }
     * {@link SignetBurstEffect }
     * {@link DispelEffect }
     * {@link DispelDebuffEffect }
     * {@link ProtectEffect }
     * {@link SlowEffect }
     * {@link BoostHealEffect }
     * {@link WeaponStatboostEffect }
     * {@link ChangeHateOnAttackedEffect }
     * {@link ExtendAuraRangeEffect }
     * {@link CloseAerialEffect }
     * {@link DispelDebuffMentalEffect }
     * {@link RootEffect }
     * {@link ParalyzeEffect }
     * {@link FPHealInstantEffect }
     * {@link SwitchHpMpEffect }
     * {@link SpellAtkDrainInstantEffect }
     * {@link XPBoostEffect }
     * {@link PolymorphEffect }
     * {@link DelayedFpAtkInstantEffect }
     * {@link BleedEffect }
     * {@link OneTimeBoostHealEffect }
     * {@link MpAttackInstantEffect }
     * {@link PetOrderUseUltraSkillEffect }
     * {@link HiPassEffect }
     * {@link SilenceEffect }
     * {@link AuraEffect }
     * {@link RecallInstantEffect }
     * {@link NoFlyEffect }
     * {@link SummonTotemEffect }
     * {@link SummonTrapEffect }
     * {@link ShieldMasteryEffect }
     * {@link SummonServantEffect }
     * {@link FpAttackEffect }
     * {@link FearEffect }
     * {@link NoDeathPenaltyEffect }
     * {@link CurseEffect }
     * 
     * 
     */
    public List<Effect> getRootAndStunAndSleep() {
        if (rootAndStunAndSleep == null) {
            rootAndStunAndSleep = new ArrayList<Effect>();
        }
        return this.rootAndStunAndSleep;
    }

}
