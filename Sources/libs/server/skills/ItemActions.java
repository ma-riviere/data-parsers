//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-833 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.03.23 at 01:29:26 PM CET 
//


package com.parser.output.aion.skills;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ItemActions complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ItemActions">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence maxOccurs="unbounded" minOccurs="0">
 *         &lt;element name="skilllearn" type="{}SkillLearnAction" minOccurs="0"/>
 *         &lt;element name="skilluse" type="{}SkillUseAction" minOccurs="0"/>
 *         &lt;element name="enchant" type="{}EnchantItemAction" minOccurs="0"/>
 *         &lt;element name="queststart" type="{}QuestStartAction" minOccurs="0"/>
 *         &lt;element name="dye" type="{}DyeAction" minOccurs="0"/>
 *         &lt;element name="craftlearn" type="{}CraftLearnAction" minOccurs="0"/>
 *         &lt;element name="extract" type="{}ExtractAction" minOccurs="0"/>
 *         &lt;element name="toypetspawn" type="{}ToyPetSpawnAction" minOccurs="0"/>
 *         &lt;element name="toypetadopt" type="{}ToyPetAdoptAction" minOccurs="0"/>
 *         &lt;element name="decompose" type="{}DecomposeAction" minOccurs="0"/>
 *         &lt;element name="expandinventory" type="{}ExpandInventoryAction" minOccurs="0"/>
 *         &lt;element name="titleadd" type="{}TitleAddAction" minOccurs="0"/>
 *         &lt;element name="learnemotion" type="{}EmotionLearnAction" minOccurs="0"/>
 *         &lt;element name="animation" type="{}AnimationAddAction" minOccurs="0"/>
 *         &lt;element name="read" type="{}ReadAction" minOccurs="0"/>
 *         &lt;element name="fireworkact" type="{}FireworksUseAction" minOccurs="0"/>
 *         &lt;element name="instancetimeclear" type="{}InstanceTimeClear" minOccurs="0"/>
 *         &lt;element name="cosmetic" type="{}CosmeticItemAction" minOccurs="0"/>
 *         &lt;element name="charge" type="{}ChargeAction" minOccurs="0"/>
 *         &lt;element name="ride" type="{}RideAction" minOccurs="0"/>
 *         &lt;element name="houseobject" type="{}SummonHouseObjectAction" minOccurs="0"/>
 *         &lt;element name="housedeco" type="{}DecorateAction" minOccurs="0"/>
 *         &lt;element name="assemble" type="{}AssemblyItemAction" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ItemActions", propOrder = {
    "skilllearnAndSkilluseAndEnchant"
})
public class ItemActions {

    @XmlElements({
        @XmlElement(name = "charge", type = ChargeAction.class),
        @XmlElement(name = "skilllearn", type = SkillLearnAction.class),
        @XmlElement(name = "titleadd", type = TitleAddAction.class),
        @XmlElement(name = "expandinventory", type = ExpandInventoryAction.class),
        @XmlElement(name = "cosmetic", type = CosmeticItemAction.class),
        @XmlElement(name = "housedeco", type = DecorateAction.class),
        @XmlElement(name = "enchant", type = EnchantItemAction.class),
        @XmlElement(name = "toypetspawn", type = ToyPetSpawnAction.class),
        @XmlElement(name = "read", type = ReadAction.class),
        @XmlElement(name = "animation", type = AnimationAddAction.class),
        @XmlElement(name = "dye", type = DyeAction.class),
        @XmlElement(name = "toypetadopt", type = ToyPetAdoptAction.class),
        @XmlElement(name = "assemble", type = AssemblyItemAction.class),
        @XmlElement(name = "learnemotion", type = EmotionLearnAction.class),
        @XmlElement(name = "craftlearn", type = CraftLearnAction.class),
        @XmlElement(name = "queststart", type = QuestStartAction.class),
        @XmlElement(name = "fireworkact", type = FireworksUseAction.class),
        @XmlElement(name = "houseobject", type = SummonHouseObjectAction.class),
        @XmlElement(name = "skilluse", type = SkillUseAction.class),
        @XmlElement(name = "extract", type = ExtractAction.class),
        @XmlElement(name = "instancetimeclear", type = InstanceTimeClear.class),
        @XmlElement(name = "decompose", type = DecomposeAction.class),
        @XmlElement(name = "ride", type = RideAction.class)
    })
    protected List<Object> skilllearnAndSkilluseAndEnchant;

    /**
     * Gets the value of the skilllearnAndSkilluseAndEnchant property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the skilllearnAndSkilluseAndEnchant property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSkilllearnAndSkilluseAndEnchant().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ChargeAction }
     * {@link SkillLearnAction }
     * {@link TitleAddAction }
     * {@link ExpandInventoryAction }
     * {@link CosmeticItemAction }
     * {@link DecorateAction }
     * {@link EnchantItemAction }
     * {@link ToyPetSpawnAction }
     * {@link ReadAction }
     * {@link AnimationAddAction }
     * {@link DyeAction }
     * {@link ToyPetAdoptAction }
     * {@link AssemblyItemAction }
     * {@link EmotionLearnAction }
     * {@link CraftLearnAction }
     * {@link QuestStartAction }
     * {@link FireworksUseAction }
     * {@link SummonHouseObjectAction }
     * {@link SkillUseAction }
     * {@link ExtractAction }
     * {@link InstanceTimeClear }
     * {@link DecomposeAction }
     * {@link RideAction }
     * 
     * 
     */
    public List<Object> getSkilllearnAndSkilluseAndEnchant() {
        if (skilllearnAndSkilluseAndEnchant == null) {
            skilllearnAndSkilluseAndEnchant = new ArrayList<Object>();
        }
        return this.skilllearnAndSkilluseAndEnchant;
    }

}
