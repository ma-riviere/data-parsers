//--------------------------------------
//--- 010 Editor v4.0.1 Binary Template
//
// File:
// Author:
// Revision:
// Purpose:
//--------------------------------------

#include "AionCommon.bt"

typedef struct {
    DWORD len;
    CHAR name[len - 4];
} LST_TITLE;

typedef struct {
    DWORD dummy1;
    CHAR fileName[128];
    DWORD dummy2;
    FLOAT dummy3[6];
} LST_MESH_INFO <read=LstMeshInfoRead>;

string LstMeshInfoRead(LST_MESH_INFO &i)
{
    return i.fileName;
}

typedef struct (int blockSz) {
    DWORD dummy1[2] <format=hex>;
    DWORD meshIdx;
    DWORD dummy2[3] <format=hex>;
    POINT_3D m[4];
    BYTE dummy3[4 * (blockSz - 10)];
} LST_MESH_DATA;

typedef struct {
    CHAR signature[3];
    Assert(signature == "CRY", "Wrong signature: " + signature);
    DWORD dummy1;
    DWORD meshDataBlockSz;
    DWORD titlesCount;
    if (titlesCount > 0)
        LST_TITLE title[titlesCount];
    DWORD meshInfoCount;
    LST_MESH_INFO meshInfo[meshInfoCount];
    DWORD meshDataCount;
    LST_MESH_DATA meshData(meshDataBlockSz)[meshDataCount] <optimize=false>;
} LST_DATA;

LST_DATA lstData;
