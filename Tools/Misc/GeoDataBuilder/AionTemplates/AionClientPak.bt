//--------------------------------------
//--- 010 Editor v4.0.1 Binary Template
//
// File:
// Author:
// Revision:
// Purpose:
//--------------------------------------

typedef struct {
	BYTE  extractVersion;
	BYTE  extractSystem;
	WORD  flags;
	WORD  compMethod;
	WORD  lastModTime;
	WORD  lastModDate;
	DWORD crc;
	DWORD compressedSz;
	DWORD uncompressedSz;
	WORD  fileNameSz;
	WORD  extraFieldsSz;
	CHAR  fileNameBytes[fileNameSz];
} PAK_FILE_HEADER;

typedef struct {
	BYTE  createVersion;
	BYTE  createSystem;
	BYTE  extractVersion;
	BYTE  extractSystem;
	WORD  flags;
	WORD  compType;
	WORD  time;
	WORD  date;
	DWORD crc;
	DWORD compressedSz;
	DWORD uncompressedSz;
	WORD  fileNameSz;
	WORD  extraFieldsSz;
	WORD  commentSz;
	WORD  diskNumStart;
	WORD  intFileAttr;
	DWORD extFileAttr;
	DWORD localHeaderOffset;
	CHAR  fileNameBytes[fileNameSz];
    local int bodySize = extraFieldsSz + commentSz;
} PAK_DIR_HEADER;

local WORD PAK_SIGNATURE1      = 0xB4AF;
local WORD PAK_SIGNATURE2_FILE = 0xFBFC;
local WORD PAK_SIGNATURE2_DIR  = 0xFDFE;
local WORD PAK_SIGNATURE2_END  = 0xF9FA;

typedef struct {
    local string title;
    WORD signature1 <format=hex>;
    Assert(signature1 == PAK_SIGNATURE1, "Wrong signature1");
    WORD signature2 <format=hex>;
    switch (signature2)
    {
    case PAK_SIGNATURE2_FILE:
        PAK_FILE_HEADER pakFileHeader;
        BYTE pakFileBody[pakFileHeader.extraFieldsSz + pakFileHeader.compressedSz];
        title = "FILE: " + pakFileHeader.fileNameBytes;
        break;
    case PAK_SIGNATURE2_DIR:
        PAK_DIR_HEADER pakDirHeader;
        if (pakDirHeader.bodySize > 0)
            BYTE pakDirBody[pakDirHeader.bodySize];
        title = "DIR: " + pakDirHeader.fileNameBytes;
        break;
    case PAK_SIGNATURE2_END:
        BYTE pakEndData[18];
        title = "END: ===========";
        break;
    default:
        Assert(0, "Unsupported signature2 value.");
    }
} PAK_DATA <read=PakDataRead>;

string PakDataRead(PAK_DATA &pakData)
{
    return pakData.title;
}

while( !FEof() )
{
    PAK_DATA pakData;
}
